{
 "metadata": {
  "name": "",
  "signature": "sha256:104551648586525eef8bdf4c510b7839e08fa6c7ef402498b5b1e6005472acb4"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ls"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u001b[0m\u001b[01;31mclicks_test.csv.zip\u001b[0m           \u001b[01;31mevents.csv.zip\u001b[0m\r\n",
        "\u001b[01;31mclicks_train.csv.zip\u001b[0m          explore_data.ipynb\r\n",
        "\u001b[01;31mdocuments_categories.csv.zip\u001b[0m  \u001b[01;34mlarge_file\u001b[0m/\r\n",
        "\u001b[01;31mdocuments_entities.csv.zip\u001b[0m    \u001b[01;31mpage_views_sample.csv.zip\u001b[0m\r\n",
        "\u001b[01;31mdocuments_meta.csv.zip\u001b[0m        \u001b[01;31mpromoted_content.csv.zip\u001b[0m\r\n",
        "\u001b[01;31mdocuments_topics.csv.zip\u001b[0m      \u001b[01;31msample_submission.csv.zip\u001b[0m\r\n"
       ]
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Each user in the dataset is represented by a unique id (uuid).\n",
      "# A person can view a document (document_id), which is simply a web page with content (e.g.  a news article). \n",
      "# On each document, a set of ads (ad_id) are displayed. \n",
      "# Each ad belongs to a campaign (campaign_id) run by an advertiser (advertiser_id).\n",
      "# You are also provided metadata about the document, such as which entities are mentioned, \n",
      "# a taxonomy of categories, the topics mentioned, and the publisher."
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# document id is the page you land after clicking on ad? OR\n",
      "# page the display unit is at?\n",
      "# the document_id in events is the document_id of the page presenting the ad_id(s) to the user.\n",
      "# document_id in promoted content is document_id for landing page for a given ad_id. So if you will click to that ad_id you will see document/website with corresponding document_id."
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 22
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import pandas as pd\n",
      "import os\n",
      "df_dict = {}\n",
      "for filename in os.listdir('/home/krai/outbrain_click_pred')[:1]:\n",
      "    df_dict[filename.split('.')[0]] = pd.read_csv(filename, compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "train = pd.read_csv('clicks_train.csv.zip', compression='zip')\n",
      "test = pd.read_csv('clicks_test.csv.zip', compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "events = pd.read_csv('events.csv.zip', compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.py:2741: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.\n",
        "  interactivity=interactivity, compiler=compiler)\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# events provides info about display id\n",
      "events.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>display_id</th>\n",
        "      <th>uuid</th>\n",
        "      <th>document_id</th>\n",
        "      <th>timestamp</th>\n",
        "      <th>platform</th>\n",
        "      <th>geo_location</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1</td>\n",
        "      <td>cb8c55702adb93</td>\n",
        "      <td>379743</td>\n",
        "      <td>61</td>\n",
        "      <td>3</td>\n",
        "      <td>US&gt;SC&gt;519</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2</td>\n",
        "      <td>79a85fa78311b9</td>\n",
        "      <td>1794259</td>\n",
        "      <td>81</td>\n",
        "      <td>2</td>\n",
        "      <td>US&gt;CA&gt;807</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>3</td>\n",
        "      <td>822932ce3d8757</td>\n",
        "      <td>1179111</td>\n",
        "      <td>182</td>\n",
        "      <td>2</td>\n",
        "      <td>US&gt;MI&gt;505</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>4</td>\n",
        "      <td>85281d0a49f7ac</td>\n",
        "      <td>1777797</td>\n",
        "      <td>234</td>\n",
        "      <td>2</td>\n",
        "      <td>US&gt;WV&gt;564</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>5</td>\n",
        "      <td>8d0daef4bf5b56</td>\n",
        "      <td>252458</td>\n",
        "      <td>338</td>\n",
        "      <td>2</td>\n",
        "      <td>SG&gt;00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "   display_id            uuid  document_id  timestamp platform geo_location\n",
        "0           1  cb8c55702adb93       379743         61        3    US>SC>519\n",
        "1           2  79a85fa78311b9      1794259         81        2    US>CA>807\n",
        "2           3  822932ce3d8757      1179111        182        2    US>MI>505\n",
        "3           4  85281d0a49f7ac      1777797        234        2    US>WV>564\n",
        "4           5  8d0daef4bf5b56       252458        338        2        SG>00"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "promoted_content = pd.read_csv('promoted_content.csv.zip', compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 25
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "promoted_content.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ad_id</th>\n",
        "      <th>document_id</th>\n",
        "      <th>campaign_id</th>\n",
        "      <th>advertiser_id</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1</td>\n",
        "      <td>6614</td>\n",
        "      <td>1</td>\n",
        "      <td>7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2</td>\n",
        "      <td>471467</td>\n",
        "      <td>2</td>\n",
        "      <td>7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>3</td>\n",
        "      <td>7692</td>\n",
        "      <td>3</td>\n",
        "      <td>7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>4</td>\n",
        "      <td>471471</td>\n",
        "      <td>2</td>\n",
        "      <td>7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>5</td>\n",
        "      <td>471472</td>\n",
        "      <td>2</td>\n",
        "      <td>7</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 26,
       "text": [
        "   ad_id  document_id  campaign_id  advertiser_id\n",
        "0      1         6614            1              7\n",
        "1      2       471467            2              7\n",
        "2      3         7692            3              7\n",
        "3      4       471471            2              7\n",
        "4      5       471472            2              7"
       ]
      }
     ],
     "prompt_number": 26
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "page_views = pd.read_csv('page_views_sample.csv.zip', compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 29
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "page_views.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>uuid</th>\n",
        "      <th>document_id</th>\n",
        "      <th>timestamp</th>\n",
        "      <th>platform</th>\n",
        "      <th>geo_location</th>\n",
        "      <th>traffic_source</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1fd5f051fba643</td>\n",
        "      <td>120</td>\n",
        "      <td>31905835</td>\n",
        "      <td>1</td>\n",
        "      <td>RS</td>\n",
        "      <td>2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>8557aa9004be3b</td>\n",
        "      <td>120</td>\n",
        "      <td>32053104</td>\n",
        "      <td>1</td>\n",
        "      <td>VN&gt;44</td>\n",
        "      <td>2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>c351b277a358f0</td>\n",
        "      <td>120</td>\n",
        "      <td>54013023</td>\n",
        "      <td>1</td>\n",
        "      <td>KR&gt;12</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>8205775c5387f9</td>\n",
        "      <td>120</td>\n",
        "      <td>44196592</td>\n",
        "      <td>1</td>\n",
        "      <td>IN&gt;16</td>\n",
        "      <td>2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>9cb0ccd8458371</td>\n",
        "      <td>120</td>\n",
        "      <td>65817371</td>\n",
        "      <td>1</td>\n",
        "      <td>US&gt;CA&gt;807</td>\n",
        "      <td>2</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 30,
       "text": [
        "             uuid  document_id  timestamp  platform geo_location  \\\n",
        "0  1fd5f051fba643          120   31905835         1           RS   \n",
        "1  8557aa9004be3b          120   32053104         1        VN>44   \n",
        "2  c351b277a358f0          120   54013023         1        KR>12   \n",
        "3  8205775c5387f9          120   44196592         1        IN>16   \n",
        "4  9cb0ccd8458371          120   65817371         1    US>CA>807   \n",
        "\n",
        "   traffic_source  \n",
        "0               2  \n",
        "1               2  \n",
        "2               1  \n",
        "3               2  \n",
        "4               2  "
       ]
      }
     ],
     "prompt_number": 30
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "users_by_doc = page_views.groupby('document_id')['uuid'].count().reset_index()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 32
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "users_by_doc = users_by_doc.sort('uuid', ascending=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 37
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "users_by_doc['% users'] = users_by_doc['uuid']/float(users_by_doc['uuid'].sum())*100"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 43
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "users_by_doc"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>document_id</th>\n",
        "      <th>uuid</th>\n",
        "      <th>% users</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>55429</th>\n",
        "      <td>1811567</td>\n",
        "      <td>429551</td>\n",
        "      <td>4.29551</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9</th>\n",
        "      <td>234</td>\n",
        "      <td>179692</td>\n",
        "      <td>1.79692</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1411</th>\n",
        "      <td>42744</td>\n",
        "      <td>156231</td>\n",
        "      <td>1.56231</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>58162</th>\n",
        "      <td>1858440</td>\n",
        "      <td>112140</td>\n",
        "      <td>1.12140</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>53737</th>\n",
        "      <td>1780813</td>\n",
        "      <td>109624</td>\n",
        "      <td>1.09624</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2197</th>\n",
        "      <td>60164</td>\n",
        "      <td>104941</td>\n",
        "      <td>1.04941</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>54272</th>\n",
        "      <td>1790442</td>\n",
        "      <td>91420</td>\n",
        "      <td>0.91420</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>59176</th>\n",
        "      <td>1877626</td>\n",
        "      <td>80309</td>\n",
        "      <td>0.80309</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>56063</th>\n",
        "      <td>1821895</td>\n",
        "      <td>79956</td>\n",
        "      <td>0.79956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>23753</th>\n",
        "      <td>732651</td>\n",
        "      <td>74630</td>\n",
        "      <td>0.74630</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>833</th>\n",
        "      <td>25792</td>\n",
        "      <td>72078</td>\n",
        "      <td>0.72078</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12940</th>\n",
        "      <td>364356</td>\n",
        "      <td>70274</td>\n",
        "      <td>0.70274</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>54063</th>\n",
        "      <td>1786343</td>\n",
        "      <td>66414</td>\n",
        "      <td>0.66414</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>58264</th>\n",
        "      <td>1860163</td>\n",
        "      <td>64659</td>\n",
        "      <td>0.64659</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>53157</th>\n",
        "      <td>1770064</td>\n",
        "      <td>63370</td>\n",
        "      <td>0.63370</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>53361</th>\n",
        "      <td>1774106</td>\n",
        "      <td>59731</td>\n",
        "      <td>0.59731</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16507</th>\n",
        "      <td>468335</td>\n",
        "      <td>57584</td>\n",
        "      <td>0.57584</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>57680</th>\n",
        "      <td>1850127</td>\n",
        "      <td>52461</td>\n",
        "      <td>0.52461</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>31384</th>\n",
        "      <td>985671</td>\n",
        "      <td>48049</td>\n",
        "      <td>0.48049</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>57682</th>\n",
        "      <td>1850151</td>\n",
        "      <td>45220</td>\n",
        "      <td>0.45220</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9678</th>\n",
        "      <td>270496</td>\n",
        "      <td>44588</td>\n",
        "      <td>0.44588</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>52841</th>\n",
        "      <td>1763695</td>\n",
        "      <td>41283</td>\n",
        "      <td>0.41283</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>55893</th>\n",
        "      <td>1819174</td>\n",
        "      <td>40935</td>\n",
        "      <td>0.40935</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>58669</th>\n",
        "      <td>1867736</td>\n",
        "      <td>37956</td>\n",
        "      <td>0.37956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>56865</th>\n",
        "      <td>1836115</td>\n",
        "      <td>37539</td>\n",
        "      <td>0.37539</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>57175</th>\n",
        "      <td>1841624</td>\n",
        "      <td>36609</td>\n",
        "      <td>0.36609</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>49532</th>\n",
        "      <td>1687259</td>\n",
        "      <td>36583</td>\n",
        "      <td>0.36583</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>54283</th>\n",
        "      <td>1790733</td>\n",
        "      <td>34023</td>\n",
        "      <td>0.34023</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>54890</th>\n",
        "      <td>1801680</td>\n",
        "      <td>33435</td>\n",
        "      <td>0.33435</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16437</th>\n",
        "      <td>465809</td>\n",
        "      <td>31459</td>\n",
        "      <td>0.31459</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16606</th>\n",
        "      <td>471420</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37574</th>\n",
        "      <td>1225726</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37572</th>\n",
        "      <td>1225688</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37554</th>\n",
        "      <td>1224905</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>45811</th>\n",
        "      <td>1572701</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>56902</th>\n",
        "      <td>1836681</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37702</th>\n",
        "      <td>1232344</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16722</th>\n",
        "      <td>475297</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3293</th>\n",
        "      <td>89303</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37734</th>\n",
        "      <td>1234620</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37818</th>\n",
        "      <td>1239601</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37816</th>\n",
        "      <td>1239495</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37810</th>\n",
        "      <td>1239214</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37807</th>\n",
        "      <td>1239064</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37804</th>\n",
        "      <td>1238942</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37801</th>\n",
        "      <td>1238703</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37800</th>\n",
        "      <td>1238682</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>45607</th>\n",
        "      <td>1566391</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3311</th>\n",
        "      <td>89794</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37768</th>\n",
        "      <td>1236339</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37767</th>\n",
        "      <td>1236321</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37765</th>\n",
        "      <td>1236288</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37752</th>\n",
        "      <td>1235301</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37751</th>\n",
        "      <td>1235262</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37750</th>\n",
        "      <td>1235204</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3302</th>\n",
        "      <td>89572</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>45630</th>\n",
        "      <td>1567187</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37746</th>\n",
        "      <td>1235174</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37745</th>\n",
        "      <td>1235163</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>39898</th>\n",
        "      <td>1342378</td>\n",
        "      <td>1</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>59849 rows \u00d7 3 columns</p>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 44,
       "text": [
        "       document_id    uuid  % users\n",
        "55429      1811567  429551  4.29551\n",
        "9              234  179692  1.79692\n",
        "1411         42744  156231  1.56231\n",
        "58162      1858440  112140  1.12140\n",
        "53737      1780813  109624  1.09624\n",
        "2197         60164  104941  1.04941\n",
        "54272      1790442   91420  0.91420\n",
        "59176      1877626   80309  0.80309\n",
        "56063      1821895   79956  0.79956\n",
        "23753       732651   74630  0.74630\n",
        "833          25792   72078  0.72078\n",
        "12940       364356   70274  0.70274\n",
        "54063      1786343   66414  0.66414\n",
        "58264      1860163   64659  0.64659\n",
        "53157      1770064   63370  0.63370\n",
        "53361      1774106   59731  0.59731\n",
        "16507       468335   57584  0.57584\n",
        "57680      1850127   52461  0.52461\n",
        "31384       985671   48049  0.48049\n",
        "57682      1850151   45220  0.45220\n",
        "9678        270496   44588  0.44588\n",
        "52841      1763695   41283  0.41283\n",
        "55893      1819174   40935  0.40935\n",
        "58669      1867736   37956  0.37956\n",
        "56865      1836115   37539  0.37539\n",
        "57175      1841624   36609  0.36609\n",
        "49532      1687259   36583  0.36583\n",
        "54283      1790733   34023  0.34023\n",
        "54890      1801680   33435  0.33435\n",
        "16437       465809   31459  0.31459\n",
        "...            ...     ...      ...\n",
        "16606       471420       1  0.00001\n",
        "37574      1225726       1  0.00001\n",
        "37572      1225688       1  0.00001\n",
        "37554      1224905       1  0.00001\n",
        "45811      1572701       1  0.00001\n",
        "56902      1836681       1  0.00001\n",
        "37702      1232344       1  0.00001\n",
        "16722       475297       1  0.00001\n",
        "3293         89303       1  0.00001\n",
        "37734      1234620       1  0.00001\n",
        "37818      1239601       1  0.00001\n",
        "37816      1239495       1  0.00001\n",
        "37810      1239214       1  0.00001\n",
        "37807      1239064       1  0.00001\n",
        "37804      1238942       1  0.00001\n",
        "37801      1238703       1  0.00001\n",
        "37800      1238682       1  0.00001\n",
        "45607      1566391       1  0.00001\n",
        "3311         89794       1  0.00001\n",
        "37768      1236339       1  0.00001\n",
        "37767      1236321       1  0.00001\n",
        "37765      1236288       1  0.00001\n",
        "37752      1235301       1  0.00001\n",
        "37751      1235262       1  0.00001\n",
        "37750      1235204       1  0.00001\n",
        "3302         89572       1  0.00001\n",
        "45630      1567187       1  0.00001\n",
        "37746      1235174       1  0.00001\n",
        "37745      1235163       1  0.00001\n",
        "39898      1342378       1  0.00001\n",
        "\n",
        "[59849 rows x 3 columns]"
       ]
      }
     ],
     "prompt_number": 44
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "## Avg num of ads clicked on a display"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 45
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "just_clicked = train[train['clicked'] == 1]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 57
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ads_clicked = just_clicked.groupby('display_id').clicked.count().reset_index()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 58
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ads_clicked.clicked.value_counts()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 59,
       "text": [
        "1    16874593\n",
        "Name: clicked, dtype: int64"
       ]
      }
     ],
     "prompt_number": 59
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "### looks like there's only one ad clicked for each display_id (seems weird)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "just_clicked.sort('display_id')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>display_id</th>\n",
        "      <th>ad_id</th>\n",
        "      <th>clicked</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1</td>\n",
        "      <td>144739</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9</th>\n",
        "      <td>2</td>\n",
        "      <td>308455</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14</th>\n",
        "      <td>3</td>\n",
        "      <td>228657</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17</th>\n",
        "      <td>4</td>\n",
        "      <td>153623</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>25</th>\n",
        "      <td>5</td>\n",
        "      <td>326514</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>29</th>\n",
        "      <td>6</td>\n",
        "      <td>175234</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>32</th>\n",
        "      <td>7</td>\n",
        "      <td>105766</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>37</th>\n",
        "      <td>8</td>\n",
        "      <td>280430</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>41</th>\n",
        "      <td>9</td>\n",
        "      <td>140940</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>44</th>\n",
        "      <td>10</td>\n",
        "      <td>332908</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>47</th>\n",
        "      <td>11</td>\n",
        "      <td>139059</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>54</th>\n",
        "      <td>12</td>\n",
        "      <td>97178</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>59</th>\n",
        "      <td>13</td>\n",
        "      <td>149541</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>62</th>\n",
        "      <td>14</td>\n",
        "      <td>224171</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>65</th>\n",
        "      <td>15</td>\n",
        "      <td>153016</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>71</th>\n",
        "      <td>16</td>\n",
        "      <td>273567</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>73</th>\n",
        "      <td>17</td>\n",
        "      <td>37191</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>79</th>\n",
        "      <td>18</td>\n",
        "      <td>285989</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>81</th>\n",
        "      <td>19</td>\n",
        "      <td>111036</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>84</th>\n",
        "      <td>20</td>\n",
        "      <td>177068</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87</th>\n",
        "      <td>21</td>\n",
        "      <td>28337</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>93</th>\n",
        "      <td>22</td>\n",
        "      <td>288069</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>95</th>\n",
        "      <td>23</td>\n",
        "      <td>192854</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>104</th>\n",
        "      <td>24</td>\n",
        "      <td>80301</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>109</th>\n",
        "      <td>25</td>\n",
        "      <td>55167</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>114</th>\n",
        "      <td>26</td>\n",
        "      <td>152193</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>116</th>\n",
        "      <td>27</td>\n",
        "      <td>7432</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>123</th>\n",
        "      <td>28</td>\n",
        "      <td>290654</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>125</th>\n",
        "      <td>29</td>\n",
        "      <td>198146</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>126</th>\n",
        "      <td>30</td>\n",
        "      <td>139944</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141600</th>\n",
        "      <td>16874564</td>\n",
        "      <td>39897</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141603</th>\n",
        "      <td>16874565</td>\n",
        "      <td>41560</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141606</th>\n",
        "      <td>16874566</td>\n",
        "      <td>233848</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141609</th>\n",
        "      <td>16874567</td>\n",
        "      <td>41560</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141615</th>\n",
        "      <td>16874568</td>\n",
        "      <td>465709</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141617</th>\n",
        "      <td>16874569</td>\n",
        "      <td>139796</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141622</th>\n",
        "      <td>16874570</td>\n",
        "      <td>148773</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141627</th>\n",
        "      <td>16874571</td>\n",
        "      <td>326724</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141628</th>\n",
        "      <td>16874572</td>\n",
        "      <td>68451</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141634</th>\n",
        "      <td>16874573</td>\n",
        "      <td>37156</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141641</th>\n",
        "      <td>16874574</td>\n",
        "      <td>83978</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141644</th>\n",
        "      <td>16874575</td>\n",
        "      <td>282350</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141650</th>\n",
        "      <td>16874576</td>\n",
        "      <td>278453</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141653</th>\n",
        "      <td>16874577</td>\n",
        "      <td>269777</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141659</th>\n",
        "      <td>16874578</td>\n",
        "      <td>285586</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141664</th>\n",
        "      <td>16874579</td>\n",
        "      <td>156050</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141668</th>\n",
        "      <td>16874580</td>\n",
        "      <td>227028</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141671</th>\n",
        "      <td>16874581</td>\n",
        "      <td>163139</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141674</th>\n",
        "      <td>16874582</td>\n",
        "      <td>29046</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141683</th>\n",
        "      <td>16874583</td>\n",
        "      <td>193326</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141689</th>\n",
        "      <td>16874584</td>\n",
        "      <td>303209</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141692</th>\n",
        "      <td>16874585</td>\n",
        "      <td>183070</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141694</th>\n",
        "      <td>16874586</td>\n",
        "      <td>116152</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141698</th>\n",
        "      <td>16874587</td>\n",
        "      <td>9892</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141703</th>\n",
        "      <td>16874588</td>\n",
        "      <td>468733</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141707</th>\n",
        "      <td>16874589</td>\n",
        "      <td>188284</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141714</th>\n",
        "      <td>16874590</td>\n",
        "      <td>142604</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141718</th>\n",
        "      <td>16874591</td>\n",
        "      <td>127047</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141724</th>\n",
        "      <td>16874592</td>\n",
        "      <td>153244</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>87141727</th>\n",
        "      <td>16874593</td>\n",
        "      <td>151498</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>16874593 rows \u00d7 3 columns</p>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 61,
       "text": [
        "          display_id   ad_id  clicked\n",
        "2                  1  144739        1\n",
        "9                  2  308455        1\n",
        "14                 3  228657        1\n",
        "17                 4  153623        1\n",
        "25                 5  326514        1\n",
        "29                 6  175234        1\n",
        "32                 7  105766        1\n",
        "37                 8  280430        1\n",
        "41                 9  140940        1\n",
        "44                10  332908        1\n",
        "47                11  139059        1\n",
        "54                12   97178        1\n",
        "59                13  149541        1\n",
        "62                14  224171        1\n",
        "65                15  153016        1\n",
        "71                16  273567        1\n",
        "73                17   37191        1\n",
        "79                18  285989        1\n",
        "81                19  111036        1\n",
        "84                20  177068        1\n",
        "87                21   28337        1\n",
        "93                22  288069        1\n",
        "95                23  192854        1\n",
        "104               24   80301        1\n",
        "109               25   55167        1\n",
        "114               26  152193        1\n",
        "116               27    7432        1\n",
        "123               28  290654        1\n",
        "125               29  198146        1\n",
        "126               30  139944        1\n",
        "...              ...     ...      ...\n",
        "87141600    16874564   39897        1\n",
        "87141603    16874565   41560        1\n",
        "87141606    16874566  233848        1\n",
        "87141609    16874567   41560        1\n",
        "87141615    16874568  465709        1\n",
        "87141617    16874569  139796        1\n",
        "87141622    16874570  148773        1\n",
        "87141627    16874571  326724        1\n",
        "87141628    16874572   68451        1\n",
        "87141634    16874573   37156        1\n",
        "87141641    16874574   83978        1\n",
        "87141644    16874575  282350        1\n",
        "87141650    16874576  278453        1\n",
        "87141653    16874577  269777        1\n",
        "87141659    16874578  285586        1\n",
        "87141664    16874579  156050        1\n",
        "87141668    16874580  227028        1\n",
        "87141671    16874581  163139        1\n",
        "87141674    16874582   29046        1\n",
        "87141683    16874583  193326        1\n",
        "87141689    16874584  303209        1\n",
        "87141692    16874585  183070        1\n",
        "87141694    16874586  116152        1\n",
        "87141698    16874587    9892        1\n",
        "87141703    16874588  468733        1\n",
        "87141707    16874589  188284        1\n",
        "87141714    16874590  142604        1\n",
        "87141718    16874591  127047        1\n",
        "87141724    16874592  153244        1\n",
        "87141727    16874593  151498        1\n",
        "\n",
        "[16874593 rows x 3 columns]"
       ]
      }
     ],
     "prompt_number": 61
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "categories = pd.read_csv('documents_categories.csv.zip', compression='zip')\n",
      "meta = pd.read_csv('documents_meta.csv.zip', compression='zip')\n",
      "entity = pd.read_csv('documents_entities.csv.zip', compression='zip')\n",
      "topics = pd.read_csv('documents_topics.csv.zip', compression='zip')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 64
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "topics.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>document_id</th>\n",
        "      <th>topic_id</th>\n",
        "      <th>confidence_level</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1595802</td>\n",
        "      <td>140</td>\n",
        "      <td>0.073113</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1595802</td>\n",
        "      <td>16</td>\n",
        "      <td>0.059416</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1595802</td>\n",
        "      <td>143</td>\n",
        "      <td>0.045421</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>1595802</td>\n",
        "      <td>170</td>\n",
        "      <td>0.038867</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>1524246</td>\n",
        "      <td>113</td>\n",
        "      <td>0.196450</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 65,
       "text": [
        "   document_id  topic_id  confidence_level\n",
        "0      1595802       140          0.073113\n",
        "1      1595802        16          0.059416\n",
        "2      1595802       143          0.045421\n",
        "3      1595802       170          0.038867\n",
        "4      1524246       113          0.196450"
       ]
      }
     ],
     "prompt_number": 65
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "categories.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>document_id</th>\n",
        "      <th>category_id</th>\n",
        "      <th>confidence_level</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1595802</td>\n",
        "      <td>1611</td>\n",
        "      <td>0.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1595802</td>\n",
        "      <td>1610</td>\n",
        "      <td>0.07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1524246</td>\n",
        "      <td>1807</td>\n",
        "      <td>0.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>1524246</td>\n",
        "      <td>1608</td>\n",
        "      <td>0.07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>1617787</td>\n",
        "      <td>1807</td>\n",
        "      <td>0.92</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 66,
       "text": [
        "   document_id  category_id  confidence_level\n",
        "0      1595802         1611              0.92\n",
        "1      1595802         1610              0.07\n",
        "2      1524246         1807              0.92\n",
        "3      1524246         1608              0.07\n",
        "4      1617787         1807              0.92"
       ]
      }
     ],
     "prompt_number": 66
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "entity.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>document_id</th>\n",
        "      <th>entity_id</th>\n",
        "      <th>confidence_level</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1524246</td>\n",
        "      <td>f9eec25663db4cd83183f5c805186f16</td>\n",
        "      <td>0.672865</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1524246</td>\n",
        "      <td>55ebcfbdaff1d6f60b3907151f38527a</td>\n",
        "      <td>0.399114</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1524246</td>\n",
        "      <td>839907a972930b17b125eb0247898412</td>\n",
        "      <td>0.392096</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>1524246</td>\n",
        "      <td>04d8f9a1ad48f126d5806a9236872604</td>\n",
        "      <td>0.213996</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>1617787</td>\n",
        "      <td>612a1d17685a498aff4f036c1ee02c16</td>\n",
        "      <td>0.386193</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 67,
       "text": [
        "   document_id                         entity_id  confidence_level\n",
        "0      1524246  f9eec25663db4cd83183f5c805186f16          0.672865\n",
        "1      1524246  55ebcfbdaff1d6f60b3907151f38527a          0.399114\n",
        "2      1524246  839907a972930b17b125eb0247898412          0.392096\n",
        "3      1524246  04d8f9a1ad48f126d5806a9236872604          0.213996\n",
        "4      1617787  612a1d17685a498aff4f036c1ee02c16          0.386193"
       ]
      }
     ],
     "prompt_number": 67
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "meta.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>document_id</th>\n",
        "      <th>source_id</th>\n",
        "      <th>publisher_id</th>\n",
        "      <th>publish_time</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1595802</td>\n",
        "      <td>1.0</td>\n",
        "      <td>603.0</td>\n",
        "      <td>2016-06-05 00:00:00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1524246</td>\n",
        "      <td>1.0</td>\n",
        "      <td>603.0</td>\n",
        "      <td>2016-05-26 11:00:00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1617787</td>\n",
        "      <td>1.0</td>\n",
        "      <td>603.0</td>\n",
        "      <td>2016-05-27 00:00:00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>1615583</td>\n",
        "      <td>1.0</td>\n",
        "      <td>603.0</td>\n",
        "      <td>2016-06-07 00:00:00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>1615460</td>\n",
        "      <td>1.0</td>\n",
        "      <td>603.0</td>\n",
        "      <td>2016-06-20 00:00:00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 71,
       "text": [
        "   document_id  source_id  publisher_id         publish_time\n",
        "0      1595802        1.0         603.0  2016-06-05 00:00:00\n",
        "1      1524246        1.0         603.0  2016-05-26 11:00:00\n",
        "2      1617787        1.0         603.0  2016-05-27 00:00:00\n",
        "3      1615583        1.0         603.0  2016-06-07 00:00:00\n",
        "4      1615460        1.0         603.0  2016-06-20 00:00:00"
       ]
      }
     ],
     "prompt_number": 71
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "meta.document_id.nunique(), topics.document_id.nunique(), categories.document_id.nunique(), entity.document_id.nunique()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 76,
       "text": [
        "(2999334, 2495423, 2828649, 1791420)"
       ]
      }
     ],
     "prompt_number": 76
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "merged = promoted_content.merge(meta, on='document_id')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 78
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "merged.document_id.nunique()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 80,
       "text": [
        "185709"
       ]
      }
     ],
     "prompt_number": 80
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "train.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>display_id</th>\n",
        "      <th>ad_id</th>\n",
        "      <th>clicked</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1</td>\n",
        "      <td>42337</td>\n",
        "      <td>0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1</td>\n",
        "      <td>139684</td>\n",
        "      <td>0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1</td>\n",
        "      <td>144739</td>\n",
        "      <td>1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>1</td>\n",
        "      <td>156824</td>\n",
        "      <td>0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>1</td>\n",
        "      <td>279295</td>\n",
        "      <td>0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "   display_id   ad_id  clicked\n",
        "0           1   42337        0\n",
        "1           1  139684        0\n",
        "2           1  144739        1\n",
        "3           1  156824        0\n",
        "4           1  279295        0"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# imp fields\n",
      "ad_id, uuid, document_id, entity_id, topic_id, topic_id_confidence_level, category_id,\n",
      "category_id_confidence_level, platform, traffic_source, campaign_id, advertiser_id, geo_location"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "## events contains data for display ids in both test and train\n",
      "## display ids from both test and train are in events, there are no common display ids in test \n",
      "## and train\n",
      "## merge events & clicks_train"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "events.display_id.nunique()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "23120126"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "train.display_id.nunique()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}